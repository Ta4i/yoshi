{
	"name": "jest-serializer",
	"versions": {
		"23.0.0-charlie.2": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-charlie.2",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.2.tgz",
				"shasum": "21beb06b29441f4b29fda4344c0532db286e7d34"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-charlie.2",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-charlie.2_1526377885284_0.8663631199212989"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-charlie.3": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-charlie.3",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.3.tgz",
				"shasum": "ae334ee1d16d827699ce2b18c74aa49b23515027"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-charlie.3",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-charlie.3_1527001137401_0.9183950860672967"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-charlie.0": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-charlie.0",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.0.tgz",
				"shasum": "92aacfe8570c7e529571094f4e45cff6c121ec55"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-charlie.0",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-charlie.0_1525258576654_0.1426063748611115"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-charlie.1": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-charlie.1",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.1.tgz",
				"shasum": "c73288c67ed332bc9b80743f0ffe98baa665de08"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-charlie.1",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-charlie.1_1525349414249_0.72585057483884"
			},
			"readmeFilename": "README.md"
		},
		"24.0.0-alpha.12": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.12",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.12.tgz",
				"shasum": "44478e6256f9e2b76a24cd56ba49923e33fe5522"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.12",
			"gitHead": "4f2bcb861d1f0fb150c05970362e52a38c31f67e",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.12_1547218839739_0.1877227588400825"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"24.0.0-alpha.10": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.10",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.10.tgz",
				"shasum": "997b06aaf622835dfba72465b914a24f9cf8eaca"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.10",
			"gitHead": "722049ccd66947d48296dcb666bc99fccab86065",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.10_1547053436054_0.20859618426972681"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"24.0.0-alpha.11": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.11",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.11.tgz",
				"shasum": "b9ca1a19aaa12ed977711ce5fc9ee79f28be0e95"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.11",
			"gitHead": "6a066c6afe2ae08669a27d3b703a6cf0d898e7b7",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.11_1547145274697_0.6256306406790355"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"24.0.0-alpha.9": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.9",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.9.tgz",
				"shasum": "ac1da43c39d20f2bdc59991a2b616fd744eaa765"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.9",
			"gitHead": "c7caa7ba5904d0c61e586694cde5f536639e4afc",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.9_1545229526143_0.11963097909190723"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"24.0.0-alpha.7": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.7",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.7.tgz",
				"shasum": "b63f2eba8d793785ed0db5739ed6aaa217e42396"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.7",
			"gitHead": "4954f46708415174c48a58f296a605fbe1244a31",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.7_1544544469391_0.824167683479307"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.10.0"
		},
		"23.0.0-charlie.4": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-charlie.4",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.4.tgz",
				"shasum": "5e75820d789977d4f858a940aa1783583e8bf595"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-charlie.4",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-charlie.4_1527072136329_0.8634631110431525"
			},
			"readmeFilename": "README.md"
		},
		"22.4.0": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "22.4.0",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-22.4.0.tgz",
				"shasum": "b5d145b98c4b0d2c20ab686609adbb81fe23b566"
			},
			"license": "MIT",
			"maintainers": [
				{
					"name": "mjesun",
					"email": "mjesun@hotmail.com"
				}
			],
			"directories": {},
			"_npmVersion": "5.5.1",
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@22.4.0",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_22.4.0_1519128211052_0.21206914541972965"
			},
			"_nodeVersion": "8.9.1"
		},
		"24.0.0-alpha.1": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.1",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.1.tgz",
				"shasum": "b686ae3ff9cd1f15ed22b82dffc1f30069f21e66"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.1",
			"gitHead": "4954f46708415174c48a58f296a605fbe1244a31",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.1_1540222544083_0.274776094504146"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.10.0"
		},
		"24.0.0-alpha.2": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.2",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.2.tgz",
				"shasum": "adcaa73ef49e56377f7fada19921c300b576e7f9"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.2",
			"gitHead": "c5e36835cff4b241327db9cf58c8f6f7227ed1f7",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.2_1540464657116_0.23198370791806933"
			},
			"_nodeVersion": "8.11.3"
		},
		"22.4.3": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "22.4.3",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-22.4.3.tgz",
				"shasum": "a679b81a7f111e4766235f4f0c46d230ee0f7436"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmVersion": "5.5.1",
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@22.4.3",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_22.4.3_1521648488316_0.47187571126282135"
			},
			"_nodeVersion": "8.9.1"
		},
		"24.0.0-alpha.0": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.0",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.0.tgz",
				"shasum": "ba3931860a32b4d40b7ac7671d902ff46d14fe9b"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.0",
			"gitHead": "22f67d49ffcce7a5b6d6891438b837b3b26ba9db",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.0_1539951160263_0.0242185466043896"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.10.0"
		},
		"24.0.0-alpha.5": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.5",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.5.tgz",
				"shasum": "23899c258aedb1220b203b5d5f19af0d359ef29e"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.5",
			"gitHead": "2c18a53e8ff2437bba5fcb8076b754ac5f79f9f8",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.5_1541769161314_0.2697893533062814"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"24.0.0-alpha.6": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.6",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.6.tgz",
				"shasum": "27d2fee4b1a85698717a30c3ec2ab80767312597"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.6",
			"gitHead": "49d08403a941e596eda1279c07a1eaf4d4a73dad",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.6_1541785777970_0.013899601487071811"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"24.0.0-alpha.4": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "24.0.0-alpha.4",
			"homepage": "https://github.com/facebook/jest#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/facebook/jest.git"
			},
			"bugs": {
				"url": "https://github.com/facebook/jest/issues"
			},
			"engines": {
				"node": ">= 6"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.4.tgz",
				"shasum": "939c31155b95bebc1ef6f76ae34dbf2c06046e52"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "jean@lauliac.com",
					"name": "jeanlauliac"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				},
				{
					"email": "rubennorte@gmail.com",
					"name": "rubennorte"
				}
			],
			"directories": {},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "rubennorte",
				"email": "rubennorte@gmail.com"
			},
			"_id": "jest-serializer@24.0.0-alpha.4",
			"gitHead": "e41f0bb257c6652c3100b97a1087f9f812fbea0d",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_24.0.0-alpha.4_1540571590631_0.5116094564178306"
			},
			"readmeFilename": "README.md",
			"_nodeVersion": "8.11.3"
		},
		"23.0.0-alpha.7": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-alpha.7",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-alpha.7.tgz",
				"shasum": "d222bc33bb09addf44cc8b3a15089d46a98a90da"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-alpha.7",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-alpha.7_1523991310853_0.9117654396690464"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-beta.2": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-beta.2",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.2.tgz",
				"shasum": "152b40bea364bc14e936cfe9553451ef309805c0"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-beta.2",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-beta.2_1524777456328_0.07570555065171147"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-beta.1": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-beta.1",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.1.tgz",
				"shasum": "9477e40fe5aae17fa0aede803735a6e55812d65f"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-beta.1",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-beta.1_1524325463560_0.03918240663492201"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-beta.0": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-beta.0",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.0.tgz",
				"shasum": "65aea41ebbfee2a0c3726d092f1bf62911743e2a"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-beta.0",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-beta.0_1524219036588_0.7046913602223415"
			},
			"readmeFilename": "README.md"
		},
		"23.0.1": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.1",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.1.tgz",
				"shasum": "a3776aeb311e90fe83fab9e533e85102bd164165"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.1",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.1_1527435049912_0.14910529546950668"
			}
		},
		"23.0.0": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0.tgz",
				"shasum": "263411ac92e1e3dde243858642bb04e8a986e8ca"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0_1527182782512_0.5808479784969345"
			}
		},
		"23.0.0-beta.3r": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-beta.3r",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.3r.tgz",
				"shasum": "714882d6864a3e1c8ae87f2a8992eea836cf9c29"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-beta.3r",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-beta.3r_1525094092934_0.11072037441345661"
			},
			"readmeFilename": "README.md"
		},
		"23.0.0-alpha.3r": {
			"name": "jest-serializer",
			"description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `un",
			"version": "23.0.0-alpha.3r",
			"repository": {
				"type": "git",
				"url": "https://github.com/facebook/jest.git"
			},
			"main": "build/index.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-alpha.3r.tgz",
				"shasum": "88ef600b1591c0f007d5d65870174b7b7528b6aa"
			},
			"license": "MIT",
			"maintainers": [
				{
					"email": "christoph.pojer@gmail.com",
					"name": "cpojer"
				},
				{
					"email": "opensource+npm@fb.com",
					"name": "fb"
				},
				{
					"email": "mjesun@hotmail.com",
					"name": "mjesun"
				}
			],
			"directories": {},
			"_npmUser": {
				"name": "mjesun",
				"email": "mjesun@hotmail.com"
			},
			"_id": "jest-serializer@23.0.0-alpha.3r",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jest-serializer_23.0.0-alpha.3r_1525093811827_0.6800508842281319"
			},
			"readmeFilename": "README.md"
		}
	},
	"time": {
		"23.0.0-charlie.2": "2018-05-15T09:51:25.446Z",
		"23.0.0-charlie.3": "2018-05-22T14:58:57.510Z",
		"23.0.0-charlie.0": "2018-05-02T10:56:16.770Z",
		"23.0.0-charlie.1": "2018-05-03T12:10:14.319Z",
		"24.0.0-alpha.12": "2019-01-11T15:00:39.837Z",
		"24.0.0-alpha.10": "2019-01-09T17:03:56.255Z",
		"24.0.0-alpha.11": "2019-01-10T18:34:34.788Z",
		"24.0.0-alpha.9": "2018-12-19T14:25:26.320Z",
		"modified": "2019-01-11T15:00:42.549Z",
		"24.0.0-alpha.7": "2018-12-11T16:07:49.579Z",
		"23.0.0-charlie.4": "2018-05-23T10:42:16.459Z",
		"22.4.0": "2018-02-20T12:03:31.268Z",
		"24.0.0-alpha.1": "2018-10-22T15:35:44.233Z",
		"24.0.0-alpha.2": "2018-10-25T10:50:57.304Z",
		"22.4.3": "2018-03-21T16:08:08.386Z",
		"24.0.0-alpha.0": "2018-10-19T12:12:40.370Z",
		"24.0.0-alpha.5": "2018-11-09T13:12:41.450Z",
		"24.0.0-alpha.6": "2018-11-09T17:49:38.079Z",
		"created": "2018-02-20T12:03:31.051Z",
		"24.0.0-alpha.4": "2018-10-26T16:33:10.800Z",
		"23.0.0-alpha.7": "2018-04-17T18:55:10.917Z",
		"23.0.0-beta.2": "2018-04-26T21:17:36.400Z",
		"23.0.0-beta.1": "2018-04-21T15:44:23.610Z",
		"23.0.0-beta.0": "2018-04-20T10:10:36.896Z",
		"23.0.1": "2018-05-27T15:30:50.111Z",
		"23.0.0": "2018-05-24T17:26:22.735Z",
		"23.0.0-beta.3r": "2018-04-30T13:14:53.078Z",
		"23.0.0-alpha.3r": "2018-04-30T13:10:11.923Z"
	},
	"dist-tags": {
		"beta": "24.0.0-alpha.12",
		"latest": "23.0.1"
	},
	"_uplinks": {
		"npmjs": {
			"fetched": 1547749425623
		}
	},
	"_distfiles": {
		"jest-serializer-23.0.0-charlie.2.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.2.tgz",
			"sha": "21beb06b29441f4b29fda4344c0532db286e7d34"
		},
		"jest-serializer-23.0.0-charlie.3.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.3.tgz",
			"sha": "ae334ee1d16d827699ce2b18c74aa49b23515027"
		},
		"jest-serializer-23.0.0-charlie.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.0.tgz",
			"sha": "92aacfe8570c7e529571094f4e45cff6c121ec55"
		},
		"jest-serializer-23.0.0-charlie.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.1.tgz",
			"sha": "c73288c67ed332bc9b80743f0ffe98baa665de08"
		},
		"jest-serializer-24.0.0-alpha.12.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.12.tgz",
			"sha": "44478e6256f9e2b76a24cd56ba49923e33fe5522"
		},
		"jest-serializer-24.0.0-alpha.10.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.10.tgz",
			"sha": "997b06aaf622835dfba72465b914a24f9cf8eaca"
		},
		"jest-serializer-24.0.0-alpha.11.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.11.tgz",
			"sha": "b9ca1a19aaa12ed977711ce5fc9ee79f28be0e95"
		},
		"jest-serializer-24.0.0-alpha.9.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.9.tgz",
			"sha": "ac1da43c39d20f2bdc59991a2b616fd744eaa765"
		},
		"jest-serializer-24.0.0-alpha.7.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.7.tgz",
			"sha": "b63f2eba8d793785ed0db5739ed6aaa217e42396"
		},
		"jest-serializer-23.0.0-charlie.4.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-charlie.4.tgz",
			"sha": "5e75820d789977d4f858a940aa1783583e8bf595"
		},
		"jest-serializer-22.4.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-22.4.0.tgz",
			"sha": "b5d145b98c4b0d2c20ab686609adbb81fe23b566"
		},
		"jest-serializer-24.0.0-alpha.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.1.tgz",
			"sha": "b686ae3ff9cd1f15ed22b82dffc1f30069f21e66"
		},
		"jest-serializer-24.0.0-alpha.2.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.2.tgz",
			"sha": "adcaa73ef49e56377f7fada19921c300b576e7f9"
		},
		"jest-serializer-22.4.3.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-22.4.3.tgz",
			"sha": "a679b81a7f111e4766235f4f0c46d230ee0f7436"
		},
		"jest-serializer-24.0.0-alpha.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.0.tgz",
			"sha": "ba3931860a32b4d40b7ac7671d902ff46d14fe9b"
		},
		"jest-serializer-24.0.0-alpha.5.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.5.tgz",
			"sha": "23899c258aedb1220b203b5d5f19af0d359ef29e"
		},
		"jest-serializer-24.0.0-alpha.6.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.6.tgz",
			"sha": "27d2fee4b1a85698717a30c3ec2ab80767312597"
		},
		"jest-serializer-24.0.0-alpha.4.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-24.0.0-alpha.4.tgz",
			"sha": "939c31155b95bebc1ef6f76ae34dbf2c06046e52"
		},
		"jest-serializer-23.0.0-alpha.7.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-alpha.7.tgz",
			"sha": "d222bc33bb09addf44cc8b3a15089d46a98a90da"
		},
		"jest-serializer-23.0.0-beta.2.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.2.tgz",
			"sha": "152b40bea364bc14e936cfe9553451ef309805c0"
		},
		"jest-serializer-23.0.0-beta.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.1.tgz",
			"sha": "9477e40fe5aae17fa0aede803735a6e55812d65f"
		},
		"jest-serializer-23.0.0-beta.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.0.tgz",
			"sha": "65aea41ebbfee2a0c3726d092f1bf62911743e2a"
		},
		"jest-serializer-23.0.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.1.tgz",
			"sha": "a3776aeb311e90fe83fab9e533e85102bd164165"
		},
		"jest-serializer-23.0.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0.tgz",
			"sha": "263411ac92e1e3dde243858642bb04e8a986e8ca"
		},
		"jest-serializer-23.0.0-beta.3r.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-beta.3r.tgz",
			"sha": "714882d6864a3e1c8ae87f2a8992eea836cf9c29"
		},
		"jest-serializer-23.0.0-alpha.3r.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/jest-serializer/-/jest-serializer-23.0.0-alpha.3r.tgz",
			"sha": "88ef600b1591c0f007d5d65870174b7b7528b6aa"
		}
	},
	"_attachments": {},
	"_rev": "5-7e84159c44deaaae",
	"readme": "# jest-serializer\n\nModule for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it through a replacer/reviver.\n\n## Install\n\n```sh\n$ yarn add jest-serializer\n```\n\n## API\n\nThree kinds of API groups are exposed:\n\n### In-memory serialization: `serialize` and `deserialize`\n\nThis set of functions take or return a `Buffer`. All the process happens in memory. This is useful when willing to transfer over HTTP, TCP or via UNIX pipes.\n\n```javascript\nimport {serialize, deserialize} from 'jest-serializer';\n\nconst myObject = {\n  foo: 'bar',\n  baz: [0, true, '2', [], {}],\n};\n\nconst buffer = serialize(myObject);\nconst myCopyObject = deserialize(buffer);\n```\n\n### Synchronous persistent filesystem: `readFileSync` and `writeFileSync`\n\nThis set of functions allow to send to disk a serialization result and retrieve it back, in a synchronous way. It mimics the `fs` API so it looks familiar.\n\n```javascript\nimport {readFileSync, writeFileSync} from 'jest-serializer';\n\nconst myObject = {\n  foo: 'bar',\n  baz: [0, true, '2', [], {}],\n};\n\nconst myFile = '/tmp/obj';\n\nwriteFileSync(myFile, myObject);\nconst myCopyObject = readFileSync(myFile);\n```"
}