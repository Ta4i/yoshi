{
	"name": "@ctrl/tinycolor",
	"versions": {
		"2.0.0": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "2.0.0",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.0.0.tgz",
				"shasum": "d7fdd44eccf3555b86c56b7d5616c840248a72aa"
			},
			"dependencies": {},
			"devDependencies": {
				"@types/fs-extra": "5.0.2",
				"@types/jest": "22.2.3",
				"@types/node": "10.0.6",
				"commitizen": "2.9.6",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "6.0.0",
				"jest": "22.4.3",
				"npm-run-all": "4.1.3",
				"rimraf": "2.6.2",
				"rollup": "0.58.2",
				"rollup-plugin-sourcemaps": "0.4.2",
				"rollup-plugin-typescript2": "0.13.0",
				"rollup-plugin-uglify": "3.0.0",
				"semantic-release": "15.4.0",
				"travis-deploy-once": "5.0.0",
				"ts-jest": "22.4.5",
				"ts-node": "6.0.3",
				"tslint": "5.10.0",
				"tslint-config-prettier": "1.12.0",
				"tslint-config-standard": "7.0.0",
				"typedoc": "0.11.1",
				"typescript": "2.8.3"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"demo": "npm-run-all --parallel start:demo watch:demo",
				"build:demo": "rollup -c rollup.demo.js",
				"watch:demo": "rollup -c rollup.demo.js -w",
				"start:demo": "serve demo/public",
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "tsc -p tsconfig.json && tsc -p tsconfig.esm.json && ts-node ./build.ts",
				"build:docs": "typedoc src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist/package-dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@2.0.0",
			"gitHead": "4a21e8004a3e3f6979bd198eb693932d463edde0",
			"typings": "./public_api.d.ts",
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_2.0.0_1525852735575_0.3445414784866523"
			},
			"sideEffects": false,
			"jest": {
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.1.0"
		},
		"2.0.1": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "2.0.1",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.0.1.tgz",
				"shasum": "bac9d546ed25762ffd99dd991f45146bf6333095"
			},
			"dependencies": {},
			"devDependencies": {
				"@types/fs-extra": "5.0.4",
				"@types/jest": "23.3.1",
				"@types/node": "10.5.5",
				"commitizen": "2.10.1",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "7.0.0",
				"jest": "23.4.2",
				"npm-run-all": "4.1.3",
				"rimraf": "2.6.2",
				"rollup": "0.63.4",
				"rollup-plugin-sourcemaps": "0.4.2",
				"rollup-plugin-typescript2": "0.16.1",
				"rollup-plugin-uglify": "4.0.0",
				"semantic-release": "15.9.3",
				"travis-deploy-once": "5.0.1",
				"ts-jest": "23.0.1",
				"ts-node": "7.0.0",
				"tslint": "5.11.0",
				"tslint-config-prettier": "1.14.0",
				"tslint-config-standard": "7.1.0",
				"typedoc": "0.11.1",
				"typescript": "3.0.1"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"demo": "npm-run-all --parallel start:demo watch:demo",
				"build:demo": "rollup -c rollup.demo.js",
				"watch:demo": "rollup -c rollup.demo.js -w",
				"start:demo": "serve demo/public",
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "tsc -p tsconfig.json && tsc -p tsconfig.esm.json && ts-node ./build.ts",
				"build:docs": "typedoc src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist/package-dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "6.1.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@2.0.1",
			"gitHead": "2893b16de4acc5c0c248b6b9ecdbf5a6e1834a02",
			"typings": "./public_api.d.ts",
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_2.0.1_1533099265992_0.9281828100734812"
			},
			"sideEffects": false,
			"jest": {
				"testURL": "http://localhost",
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.7.0"
		},
		"2.1.0": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "2.1.0",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.1.0.tgz",
				"shasum": "06b356495df354938553a5fbeda58a2ceea228d4"
			},
			"devDependencies": {
				"@types/fs-extra": "5.0.4",
				"@types/jest": "23.3.1",
				"@types/node": "10.5.5",
				"commitizen": "2.10.1",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "7.0.0",
				"jest": "23.4.2",
				"npm-run-all": "4.1.3",
				"rimraf": "2.6.2",
				"rollup": "0.63.5",
				"rollup-plugin-sourcemaps": "0.4.2",
				"rollup-plugin-terser": "1.0.1",
				"rollup-plugin-typescript2": "0.16.1",
				"rollup-plugin-uglify": "4.0.0",
				"semantic-release": "15.9.3",
				"travis-deploy-once": "5.0.1",
				"ts-jest": "23.0.1",
				"ts-node": "7.0.0",
				"tslint": "5.11.0",
				"tslint-config-prettier": "1.14.0",
				"tslint-config-standard": "7.1.0",
				"typedoc": "0.11.1",
				"typescript": "3.0.1"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"demo": "npm-run-all --parallel start:demo watch:demo",
				"build:demo": "rollup -c rollup.demo.js",
				"watch:demo": "rollup -c rollup.demo.js -w",
				"start:demo": "serve demo/public",
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "npm run build-es6; npm run build-cmjs; ts-node build",
				"build-es6": "tsc -P ./tsconfig-build.json --outDir 'dist/es' --module es2015 -d false --moduleResolution node",
				"build-cmjs": "tsc -P ./tsconfig-build.json",
				"build:docs": "typedoc src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "6.2.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@2.1.0",
			"gitHead": "82e23a66746bf9f95557dd076217eeca9253050f",
			"typings": "./public_api.d.ts",
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_2.1.0_1533233231672_0.33195365832304846"
			},
			"sideEffects": false,
			"jest": {
				"testURL": "http://localhost",
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.8.0"
		},
		"1.0.0": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "1.0.0",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.0.0.tgz",
				"shasum": "faf5cc00ce2d6e96cc6679876f82f508bfce6eed"
			},
			"dependencies": {},
			"devDependencies": {
				"@commitlint/cli": "^6.1.3",
				"@commitlint/config-conventional": "^6.1.3",
				"@types/fs-extra": "^5.0.2",
				"@types/jest": "^22.2.3",
				"@types/node": "^10.0.0",
				"commitizen": "^2.9.6",
				"cz-conventional-changelog": "^2.1.0",
				"fs-extra": "^5.0.0",
				"husky": "^1.0.0-rc.2",
				"jest": "^22.4.3",
				"prettier": "^1.12.1",
				"rimraf": "^2.6.2",
				"rollup": "^0.58.2",
				"rollup-plugin-sourcemaps": "^0.4.2",
				"semantic-release": "^15.1.7",
				"travis-deploy-once": "^5.0.0",
				"ts-jest": "^22.4.4",
				"ts-node": "^6.0.2",
				"tslint": "^5.9.1",
				"tslint-config-prettier": "^1.12.0",
				"tslint-config-standard": "^7.0.0",
				"typedoc": "^0.11.1",
				"typescript": "^2.8.3"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "tsc -p tsconfig.json && tsc -p tsconfig.esm.json && ts-node ./build.ts",
				"build:docs": "typedoc --out docs --target es6 --theme minimal --mode file src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"commitlint": "commitlint -e $GIT_PARAMS",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist/package-dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@1.0.0",
			"gitHead": "2733da4cd3402e2f41b4c5efe0cc5cff9a39077b",
			"typings": "./public_api.d.ts",
			"husky": {
				"hooks": {
					"commit-msg": "npm run commitlint"
				}
			},
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_1.0.0_1525071242678_0.44458066670507246"
			},
			"jest": {
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.0.0"
		},
		"1.1.0": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "1.1.0",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.1.0.tgz",
				"shasum": "d4989005e0dc8c19ee257dcb74631000912d844a"
			},
			"dependencies": {},
			"devDependencies": {
				"@commitlint/cli": "6.1.3",
				"@commitlint/config-conventional": "6.1.3",
				"@types/fs-extra": "5.0.2",
				"@types/jest": "22.2.3",
				"@types/node": "10.0.1",
				"commitizen": "2.9.6",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "6.0.0",
				"husky": "1.0.0-rc.2",
				"jest": "22.4.3",
				"prettier": "1.12.1",
				"rimraf": "2.6.2",
				"rollup": "0.58.2",
				"rollup-plugin-sourcemaps": "0.4.2",
				"semantic-release": "15.1.8",
				"travis-deploy-once": "5.0.0",
				"ts-jest": "22.4.4",
				"ts-node": "6.0.2",
				"tslint": "5.9.1",
				"tslint-config-prettier": "1.12.0",
				"tslint-config-standard": "7.0.0",
				"typedoc": "0.11.1",
				"typescript": "2.8.3"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "tsc -p tsconfig.json && tsc -p tsconfig.esm.json && ts-node ./build.ts",
				"build:docs": "typedoc --out docs --target es6 --theme minimal --mode file src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"commitlint": "commitlint -e $GIT_PARAMS",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist/package-dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@1.1.0",
			"gitHead": "144e262b4533741b6c38f5092bc194ba5f495fdf",
			"typings": "./public_api.d.ts",
			"husky": {
				"hooks": {
					"commit-msg": "npm run commitlint"
				}
			},
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_1.1.0_1525198161764_0.27906737334745824"
			},
			"sideEffects": false,
			"jest": {
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.0.0"
		},
		"2.2.0": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "2.2.0",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.2.0.tgz",
				"shasum": "1608c8cffa3c9e79a86167d331fa687e2ff847f5"
			},
			"devDependencies": {
				"@types/fs-extra": "5.0.4",
				"@types/jest": "23.3.1",
				"@types/node": "10.5.7",
				"commitizen": "2.10.1",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "7.0.0",
				"jest": "23.5.0",
				"npm-run-all": "4.1.3",
				"rimraf": "2.6.2",
				"rollup": "0.64.1",
				"rollup-plugin-sourcemaps": "0.4.2",
				"rollup-plugin-terser": "1.0.1",
				"rollup-plugin-typescript2": "0.16.1",
				"rollup-plugin-uglify": "4.0.0",
				"semantic-release": "15.9.7",
				"travis-deploy-once": "5.0.2",
				"ts-jest": "23.1.3",
				"ts-node": "7.0.0",
				"tslint": "5.11.0",
				"tslint-config-prettier": "1.14.0",
				"tslint-config-standard": "7.1.0",
				"typedoc": "0.11.1",
				"typescript": "3.0.1"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"demo": "npm-run-all --parallel start:demo watch:demo",
				"build:demo": "rollup -c rollup.demo.js",
				"watch:demo": "rollup -c rollup.demo.js -w",
				"start:demo": "serve demo/public",
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "npm run build-es6; npm run build-cmjs; ts-node build",
				"build-es6": "tsc -P ./tsconfig-build.json --outDir 'dist/es' --module es2015 -d false --moduleResolution node",
				"build-cmjs": "tsc -P ./tsconfig-build.json",
				"build:docs": "typedoc src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "6.3.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@2.2.0",
			"gitHead": "59d37d8f6060b3504d14be602818e107b5945772",
			"typings": "./public_api.d.ts",
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./es/public_api.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_2.2.0_1533928320069_0.4139993576057279"
			},
			"sideEffects": false,
			"jest": {
				"testURL": "http://localhost",
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.8.0"
		},
		"1.1.1": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "1.1.1",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.1.1.tgz",
				"shasum": "f1b6b781adf1782ed48ff693bd395aa00eb6de0b"
			},
			"dependencies": {},
			"devDependencies": {
				"@commitlint/cli": "6.2.0",
				"@commitlint/config-conventional": "6.1.3",
				"@types/fs-extra": "5.0.2",
				"@types/jest": "22.2.3",
				"@types/node": "10.0.2",
				"commitizen": "2.9.6",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "6.0.0",
				"husky": "1.0.0-rc.2",
				"jest": "22.4.3",
				"prettier": "1.12.1",
				"rimraf": "2.6.2",
				"rollup": "0.58.2",
				"rollup-plugin-sourcemaps": "0.4.2",
				"semantic-release": "15.2.0",
				"travis-deploy-once": "5.0.0",
				"ts-jest": "22.4.4",
				"ts-node": "6.0.2",
				"tslint": "5.9.1",
				"tslint-config-prettier": "1.12.0",
				"tslint-config-standard": "7.0.0",
				"typedoc": "0.11.1",
				"typescript": "2.8.3"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "tsc -p tsconfig.json && tsc -p tsconfig.esm.json && ts-node ./build.ts",
				"build:docs": "typedoc --out docs --target es6 --theme minimal --mode file src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"commitlint": "commitlint -e $GIT_PARAMS",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist/package-dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@1.1.1",
			"gitHead": "3480dc5e3b7c60fdd92ae10fb1d9a984e7935d41",
			"typings": "./public_api.d.ts",
			"husky": {
				"hooks": {
					"commit-msg": "npm run commitlint"
				}
			},
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_1.1.1_1525278978231_0.8929806658481503"
			},
			"sideEffects": false,
			"jest": {
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.0.0"
		},
		"1.2.0": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "1.2.0",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.2.0.tgz",
				"shasum": "203f76cea8e4d2609a76f0e4198234ef006f6b5e"
			},
			"dependencies": {},
			"devDependencies": {
				"@types/fs-extra": "5.0.2",
				"@types/jest": "22.2.3",
				"@types/node": "10.0.4",
				"commitizen": "2.9.6",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "6.0.0",
				"jest": "22.4.3",
				"npm-run-all": "4.1.3",
				"prettier": "1.12.1",
				"rimraf": "2.6.2",
				"rollup": "0.58.2",
				"rollup-plugin-sourcemaps": "0.4.2",
				"rollup-plugin-typescript2": "0.13.0",
				"rollup-plugin-uglify": "3.0.0",
				"semantic-release": "15.3.1",
				"travis-deploy-once": "5.0.0",
				"ts-jest": "22.4.5",
				"ts-node": "6.0.3",
				"tslint": "5.10.0",
				"tslint-config-prettier": "1.12.0",
				"tslint-config-standard": "7.0.0",
				"typedoc": "0.11.1",
				"typescript": "2.8.3"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"demo": "npm-run-all --parallel start:demo watch:demo",
				"build:demo": "rollup -c rollup.demo.js",
				"watch:demo": "rollup -c rollup.demo.js -w",
				"start:demo": "serve demo/public",
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "tsc -p tsconfig.json && tsc -p tsconfig.esm.json && ts-node ./build.ts",
				"build:docs": "typedoc src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist/package-dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "5.6.0",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@1.2.0",
			"gitHead": "327f615320e4272a31111e0b45687c4d48b28090",
			"typings": "./public_api.d.ts",
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./bundles/tinycolor.es2015.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_1.2.0_1525675562683_0.0012266599050576588"
			},
			"sideEffects": false,
			"jest": {
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"coveragePathIgnorePatterns": [
					"<rootDir>/node_modules/",
					"<rootDir>/test/"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.0.0"
		},
		"2.2.1": {
			"name": "@ctrl/tinycolor",
			"description": "Fast, small color manipulation and conversion for JavaScript",
			"version": "2.2.1",
			"author": {
				"name": "Scott Cooper",
				"email": "scttcper@gmail.com"
			},
			"homepage": "https://github.com/typectrl/tinycolor#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/typectrl/tinycolor.git"
			},
			"bugs": {
				"url": "https://github.com/typectrl/tinycolor/issues"
			},
			"engines": {
				"node": ">=8.0.0"
			},
			"main": "./public_api.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.2.1.tgz",
				"shasum": "4aae678391bb65ce12c39c0fed5159273709dd81"
			},
			"devDependencies": {
				"@types/fs-extra": "5.0.4",
				"@types/jest": "23.3.2",
				"@types/node": "10.11.0",
				"commitizen": "2.10.1",
				"cz-conventional-changelog": "2.1.0",
				"fs-extra": "7.0.0",
				"jest": "23.6.0",
				"npm-run-all": "4.1.3",
				"rimraf": "2.6.2",
				"rollup": "0.66.2",
				"rollup-plugin-sourcemaps": "0.4.2",
				"rollup-plugin-terser": "3.0.0",
				"rollup-plugin-typescript2": "0.17.0",
				"rollup-plugin-uglify": "6.0.0",
				"semantic-release": "15.9.16",
				"travis-deploy-once": "5.0.8",
				"ts-jest": "23.10.1",
				"ts-node": "7.0.1",
				"tslint": "5.11.0",
				"tslint-config-prettier": "1.15.0",
				"tslint-config-standard": "8.0.1",
				"typedoc": "0.12.0",
				"typescript": "3.0.3"
			},
			"keywords": [
				"typescript",
				"color",
				"manipulation",
				"tinycolor",
				"hsa",
				"rgb"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "scttcper",
					"email": "scttcper@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"demo": "npm-run-all --parallel start:demo watch:demo",
				"build:demo": "rollup -c rollup.demo.js",
				"watch:demo": "rollup -c rollup.demo.js -w",
				"start:demo": "serve demo/public",
				"lint": "tslint -p tsconfig.json -t stylish 'src/**/*.ts' 'test/**/*.ts'",
				"lint:fix": "tslint -p tsconfig.json -t stylish --fix 'src/**/*.ts' 'test/**/*.ts'",
				"prebuild": "rimraf dist",
				"build": "npm run build-es6; npm run build-cmjs; ts-node build",
				"build-es6": "tsc -P ./tsconfig-build.json --outDir 'dist/es' --module es2015 -d false --moduleResolution node",
				"build-cmjs": "tsc -P ./tsconfig-build.json",
				"build:docs": "typedoc src && touch docs/.nojekyll",
				"test": "jest",
				"test:watch": "jest --watch",
				"test:prod": "npm run test -- --coverage --no-cache",
				"commit": "git-cz",
				"travis-deploy-once": "travis-deploy-once",
				"semantic-release": "cd dist && semantic-release"
			},
			"config": {
				"commitizen": {
					"path": "cz-conventional-changelog"
				}
			},
			"publishConfig": {
				"access": "public"
			},
			"_npmVersion": "6.4.1",
			"_npmUser": {
				"name": "scttcper",
				"email": "scttcper@gmail.com"
			},
			"_id": "@ctrl/tinycolor@2.2.1",
			"gitHead": "8d578a73fe3b2eafc1ccf3398e443a8126fbf1b7",
			"typings": "./public_api.d.ts",
			"release": {
				"branch": "master"
			},
			"commitlint": {
				"extends": [
					"@commitlint/config-conventional"
				]
			},
			"module": "./es/public_api.js",
			"_hasShrinkwrap": false,
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/tinycolor_2.2.1_1537942615572_0.7243185666491485"
			},
			"sideEffects": false,
			"jest": {
				"testURL": "http://localhost",
				"transform": {
					".ts": "ts-jest"
				},
				"testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
				"moduleFileExtensions": [
					"ts",
					"js"
				],
				"collectCoverage": true
			},
			"_nodeVersion": "10.11.0"
		}
	},
	"time": {
		"2.0.0": "2018-05-09T07:58:55.675Z",
		"2.0.1": "2018-08-01T04:54:26.142Z",
		"2.1.0": "2018-08-02T18:07:11.995Z",
		"created": "2018-04-30T06:54:02.621Z",
		"modified": "2018-09-26T06:16:58.878Z",
		"1.0.0": "2018-04-30T06:54:02.773Z",
		"1.1.0": "2018-05-01T18:09:21.913Z",
		"2.2.0": "2018-08-10T19:12:00.176Z",
		"1.1.1": "2018-05-02T16:36:18.342Z",
		"1.2.0": "2018-05-07T06:46:02.819Z",
		"2.2.1": "2018-09-26T06:16:55.858Z"
	},
	"dist-tags": {
		"latest": "2.2.1"
	},
	"_uplinks": {
		"npmjs": {
			"fetched": 1547828398882
		}
	},
	"_distfiles": {
		"tinycolor-2.0.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.0.0.tgz",
			"sha": "d7fdd44eccf3555b86c56b7d5616c840248a72aa"
		},
		"tinycolor-2.0.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.0.1.tgz",
			"sha": "bac9d546ed25762ffd99dd991f45146bf6333095"
		},
		"tinycolor-2.1.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.1.0.tgz",
			"sha": "06b356495df354938553a5fbeda58a2ceea228d4"
		},
		"tinycolor-1.0.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.0.0.tgz",
			"sha": "faf5cc00ce2d6e96cc6679876f82f508bfce6eed"
		},
		"tinycolor-1.1.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.1.0.tgz",
			"sha": "d4989005e0dc8c19ee257dcb74631000912d844a"
		},
		"tinycolor-2.2.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.2.0.tgz",
			"sha": "1608c8cffa3c9e79a86167d331fa687e2ff847f5"
		},
		"tinycolor-1.1.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.1.1.tgz",
			"sha": "f1b6b781adf1782ed48ff693bd395aa00eb6de0b"
		},
		"tinycolor-1.2.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-1.2.0.tgz",
			"sha": "203f76cea8e4d2609a76f0e4198234ef006f6b5e"
		},
		"tinycolor-2.2.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/@ctrl/tinycolor/-/tinycolor-2.2.1.tgz",
			"sha": "4aae678391bb65ce12c39c0fed5159273709dd81"
		}
	},
	"_attachments": {},
	"_rev": "10-fa7ad28fd4686d28",
	"readme": "# tinycolor [![npm](https://img.shields.io/npm/v/%40ctrl%2Ftinycolor.svg?maxAge=3600)](https://www.npmjs.com/package/%40ctrl%2Ftinycolor) [![build status](https://img.shields.io/travis/TypeCtrl/tinycolor.svg)](https://travis-ci.org/TypeCtrl/tinycolor) [![coverage status](https://codecov.io/gh/typectrl/tinycolor/branch/master/graph/badge.svg)](https://codecov.io/gh/typectrl/tinycolor)\n\n> TinyColor is a small library for color manipulation and conversion\n\nA fork of [tinycolor2](https://github.com/bgrins/TinyColor) by [Brian Grinstead](https://github.com/bgrins)\n\n### Changes from tinycolor2\n\n* reformatted into TypeScript / es2015 and requires node >= 8\n  * tree shakeable \"module\" export and no package `sideEffects`\n* `tinycolor` is now exported as a class called `TinyColor`\n* new `random`, an implementation of [randomColor](https://github.com/davidmerfield/randomColor/) by David Merfield that returns a TinyColor object\n* several functions moved out of the tinycolor class and are no longer `TinyColor.<function>`\n  * `readability`, `fromRatio` moved out\n  * `random` moved out and renamed to `legacyRandom`\n  * `toFilter` has been moved out and renamed to `toMsFilter`\n* `mix`, `equals` use the current TinyColor object as the first parameter\n* added polyad colors tinycolor PR [126](https://github.com/bgrins/TinyColor/pull/126)\n* color wheel values (360) are allowed to over or under-spin and still return valid colors tinycolor PR [108](https://github.com/bgrins/TinyColor/pull/108)\n* added `tint()` and `shade()` tinycolor PR [159](https://github.com/bgrins/TinyColor/pull/159)\n* `isValid`, `format` are now propertys instead of a function\n\n## Install\n\n```sh\nnpm install @ctrl/tinycolor\n```\n\n## Use\n\n```ts\nimport { TinyColor } from '@ctrl/tinycolor';\nconst color = new TinyColor('red').toHexString(); // '#ff0000'\n```\n\n## Accepted String Input\n\nThe string parsing is very permissive. It is meant to make typing a color as input as easy as possible. All commas, percentages, parenthesis are optional, and most input allow either 0-1, 0%-100%, or 0-n (where n is either 100, 255, or 360 depending on the value).\n\nHSL and HSV both require either 0%-100% or 0-1 for the `S`/`L`/`V` properties. The `H` (hue) can have values between 0%-100% or 0-360.\n\nRGB input requires either 0-255 or 0%-100%.\n\nIf you call `tinycolor.fromRatio`, RGB and Hue input can also accept 0-1.\n\nHere are some examples of string input:\n\n### Hex, 8-digit (RGBA) Hex\n\n```ts\nnew TinyColor('#000');\nnew TinyColor('000');\nnew TinyColor('#369C');\nnew TinyColor('369C');\nnew TinyColor('#f0f0f6');\nnew TinyColor('f0f0f6');\nnew TinyColor('#f0f0f688');\nnew TinyColor('f0f0f688');\n```\n\n### RGB, RGBA\n\n```ts\nnew TinyColor('rgb (255, 0, 0)');\nnew TinyColor('rgb 255 0 0');\nnew TinyColor('rgba (255, 0, 0, .5)');\nnew TinyColor({ r: 255, g: 0, b: 0 });\n\nimport { fromRatio } from '@ctrl/tinycolor';\nfromRatio({ r: 1, g: 0, b: 0 });\nfromRatio({ r: 0.5, g: 0.5, b: 0.5 });\n```\n\n### HSL, HSLA\n\n```ts\nnew TinyColor('hsl(0, 100%, 50%)');\nnew TinyColor('hsla(0, 100%, 50%, .5)');\nnew TinyColor('hsl(0, 100%, 50%)');\nnew TinyColor('hsl 0 1.0 0.5');\nnew TinyColor({ h: 0, s: 1, l: 0.5 });\n\nimport { fromRatio } from '@ctrl/tinycolor';\nfromRatio({ h: 1, s: 0, l: 0 });\nfromRatio({ h: 0.5, s: 0.5, l: 0.5 });\n```\n\n### HSV, HSVA\n\n```ts\nnew TinyColor('hsv(0, 100%, 100%)');\nnew TinyColor('hsva(0, 100%, 100%, .5)');\nnew TinyColor('hsv (0 100% 100%)');\nnew TinyColor('hsv 0 1 1');\nnew TinyColor({ h: 0, s: 100, v: 100 });\n\nimport { fromRatio } from '@ctrl/tinycolor';\nfromRatio({ h: 1, s: 0, v: 0 });\nfromRatio({ h: 0.5, s: 0.5, v: 0.5 });\n```\n\n### Named\n\n```ts\nnew TinyColor('RED');\nnew TinyColor('blanchedalmond');\nnew TinyColor('darkblue');\n```\n\n### Accepted Object Input\n\nIf you are calling this from code, you may want to use object input. Here are some examples of the different types of accepted object inputs:\n\n```ts\n{ r: 255, g: 0, b: 0 }\n{ r: 255, g: 0, b: 0, a: .5 }\n{ h: 0, s: 100, l: 50 }\n{ h: 0, s: 100, v: 100 }\n```\n\n## Properties\n\n### format\n\nReturns the format used to create the tinycolor instance\n\n```ts\nconst color = new TinyColor('red');\ncolor.format; // \"name\"\ncolor = new TinyColor({ r: 255, g: 255, b: 255 });\ncolor.format; // \"rgb\"\n```\n\n### isValid\n\nA boolean indicating whether the color was successfully parsed. Note: if the color is not valid then it will act like `black` when being used with other methods.\n\n```ts\nconst color1 = new TinyColor('red');\ncolor1.isValid; // true\ncolor1.toHexString(); // \"#ff0000\"\n\nconst color2 = new TinyColor('not a color');\ncolor2.isValid; // false\ncolor2.toString(); // \"#000000\"\n```\n\n## Methods\n\n### getOriginalInput\n\nReturns the input passed into the constructer used to create the tinycolor instance\n\n```ts\nconst color = new TinyColor('red');\ncolor.getOriginalInput(); // \"red\"\ncolor = new TinyColor({ r: 255, g: 255, b: 255 });\ncolor.getOriginalInput(); // \"{r: 255, g: 255, b: 255}\"\n```\n\n### getBrightness\n\nReturns the perceived brightness of a color, from `0-255`, as defined by [Web Content Accessibility Guidelines (Version 1.0)](http://www.w3.org/TR/AERT#color-contrast).\n\n```ts\nconst color1 = new TinyColor('#fff');\ncolor1.getBrightness(); // 255\n\nconst color2 = new TinyColor('#000');\ncolor2.getBrightness(); // 0\n```\n\n### isLight\n\nReturn a boolean indicating whether the color's perceived brightness is light.\n\n```ts\nconst color1 = new TinyColor('#fff');\ncolor1.isLight(); // true\n\nconst color2 = new TinyColor('#000');\ncolor2.isLight(); // false\n```\n\n### isDark\n\nReturn a boolean indicating whether the color's perceived brightness is dark.\n\n```ts\nconst color1 = new TinyColor('#fff');\ncolor1.isDark(); // false\n\nconst color2 = new TinyColor('#000');\ncolor2.isDark(); // true\n```\n\n### getLuminance\n\nReturns the perceived luminance of a color, from `0-1` as defined by [Web Content Accessibility Guidelines (Version 2.0).](http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef)\n\n```ts\nconst color1 = new TinyColor('#fff');\ncolor1.getLuminance(); // 1\n\nconst color2 = new TinyColor('#000');\ncolor2.getLuminance(); // 0\n```\n\n### getAlpha\n\nReturns the alpha value of a color, from `0-1`.\n\n```ts\nconst color1 = new TinyColor('rgba(255, 0, 0, .5)');\ncolor1.getAlpha(); // 0.5\n\nconst color2 = new TinyColor('rgb(255, 0, 0)');\ncolor2.getAlpha(); // 1\n\nconst color3 = new TinyColor('transparent');\ncolor3.getAlpha(); // 0\n```\n\n### setAlpha\n\nSets the alpha value on a current color. Accepted range is in between `0-1`.\n\n```ts\nconst color = new TinyColor('red');\ncolor.getAlpha(); // 1\ncolor.setAlpha(0.5);\ncolor.getAlpha(); // .5\ncolor.toRgbString(); // \"rgba(255, 0, 0, .5)\"\n```\n\n### String Representations\n\nThe following methods will return a property for the `alpha` value, which can be ignored: `toHsv`, `toHsl`, `toRgb`\n\n### toHsv\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHsv(); // { h: 0, s: 1, v: 1, a: 1 }\n```\n\n### toHsvString\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHsvString(); // \"hsv(0, 100%, 100%)\"\ncolor.setAlpha(0.5);\ncolor.toHsvString(); // \"hsva(0, 100%, 100%, 0.5)\"\n```\n\n### toHsl\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHsl(); // { h: 0, s: 1, l: 0.5, a: 1 }\n```\n\n### toHslString\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHslString(); // \"hsl(0, 100%, 50%)\"\ncolor.setAlpha(0.5);\ncolor.toHslString(); // \"hsla(0, 100%, 50%, 0.5)\"\n```\n\n### toHex\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHex(); // \"ff0000\"\n```\n\n### toHexString\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHexString(); // \"#ff0000\"\n```\n\n### toHex8\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHex8(); // \"ff0000ff\"\n```\n\n### toHex8String\n\n```ts\nconst color = new TinyColor('red');\ncolor.toHex8String(); // \"#ff0000ff\"\n```\n\n### toRgb\n\n```ts\nconst color = new TinyColor('red');\ncolor.toRgb(); // { r: 255, g: 0, b: 0, a: 1 }\n```\n\n### toRgbString\n\n```ts\nconst color = new TinyColor('red');\ncolor.toRgbString(); // \"rgb(255, 0, 0)\"\ncolor.setAlpha(0.5);\ncolor.toRgbString(); // \"rgba(255, 0, 0, 0.5)\"\n```\n\n### toPercentageRgb\n\n```ts\nconst color = new TinyColor('red');\ncolor.toPercentageRgb(); // { r: \"100%\", g: \"0%\", b: \"0%\", a: 1 }\n```\n\n### toPercentageRgbString\n\n```ts\nconst color = new TinyColor('red');\ncolor.toPercentageRgbString(); // \"rgb(100%, 0%, 0%)\"\ncolor.setAlpha(0.5);\ncolor.toPercentageRgbString(); // \"rgba(100%, 0%, 0%, 0.5)\"\n```\n\n### toName\n\n```ts\nconst color = new TinyColor('red');\ncolor.toName(); // \"red\"\n```\n\n### toFilter\n\n```ts\nimport { toMsFilter } from '@ctrl/tinycolor';\ntoMsFilter('red', 'blue'); // 'progid:DXImageTransform.Microsoft.gradient(startColorstr=#ffff0000,endColorstr=#ff0000ff)'\n```\n\n### toString\n\nPrint to a string, depending on the input format. You can also override this by passing one of `\"rgb\", \"prgb\", \"hex6\", \"hex3\", \"hex8\", \"name\", \"hsl\", \"hsv\"` into the function.\n\n```ts\nconst color1 = new TinyColor('red');\ncolor1.toString(); // \"red\"\ncolor1.toString('hsv'); // \"hsv(0, 100%, 100%)\"\n\nconst color2 = new TinyColor('rgb(255, 0, 0)');\ncolor2.toString(); // \"rgb(255, 0, 0)\"\ncolor2.setAlpha(0.5);\ncolor2.toString(); // \"rgba(255, 0, 0, 0.5)\"\n```\n\n### Color Modification\n\nThese methods manipulate the current color, and return it for chaining. For instance:\n\n```ts\nnew TinyColor('red')\n  .lighten()\n  .desaturate()\n  .toHexString(); // '#f53d3d'\n```\n\n### lighten\n\n`lighten: function(amount = 10) -> TinyColor`. Lighten the color a given amount, from 0 to 100. Providing 100 will always return white.\n\n```ts\nnew TinyColor('#f00').lighten().toString(); // '#ff3333'\nnew TinyColor('#f00').lighten(100).toString(); // '#ffffff'\n```\n\n### brighten\n\n`brighten: function(amount = 10) -> TinyColor`. Brighten the color a given amount, from 0 to 100.\n\n```ts\nnew TinyColor('#f00').brighten().toString(); // '#ff1919'\n```\n\n### darken\n\n`darken: function(amount = 10) -> TinyColor`. Darken the color a given amount, from 0 to 100. Providing 100 will always return black.\n\n```ts\nnew TinyColor('#f00').darken().toString(); // '#cc0000'\nnew TinyColor('#f00').darken(100).toString(); // '#000000'\n```\n\n### tint\n\nMix the color with pure white, from 0 to 100. Providing 0 will do nothing, providing 100 will always return white.\n\n```ts\nnew TinyColor('#f00').tint().toString(); // \"#ff1a1a\"\nnew TinyColor('#f00').tint(100).toString(); // \"#ffffff\"\n```\n\n### shade\n\nMix the color with pure black, from 0 to 100. Providing 0 will do nothing, providing 100 will always return black.\n\n```ts\nnew TinyColor('#f00').shade().toString(); // \"#e60000\"\nnew TinyColor('#f00').shade(100).toString(); // \"#000000\"\n```\n\n### desaturate\n\n`desaturate: function(amount = 10) -> TinyColor`. Desaturate the color a given amount, from 0 to 100. Providing 100 will is the same as calling `greyscale`.\n\n```ts\nnew TinyColor('#f00').desaturate().toString(); // \"#f20d0d\"\nnew TinyColor('#f00').desaturate(100).toString(); // \"#808080\"\n```\n\n### saturate\n\n`saturate: function(amount = 10) -> TinyColor`. Saturate the color a given amount, from 0 to 100.\n\n```ts\nnew TinyColor('hsl(0, 10%, 50%)').saturate().toString(); // \"hsl(0, 20%, 50%)\"\n```\n\n### greyscale\n\n`greyscale: function() -> TinyColor`. Completely desaturates a color into greyscale. Same as calling `desaturate(100)`.\n\n```ts\nnew TinyColor('#f00').greyscale().toString(); // \"#808080\"\n```\n\n### spin\n\n`spin: function(amount = 0) -> TinyColor`. Spin the hue a given amount, from -360 to 360. Calling with 0, 360, or -360 will do nothing (since it sets the hue back to what it was before).\n\n```ts\nnew TinyColor('#f00').spin(180).toString(); // \"#00ffff\"\nnew TinyColor('#f00').spin(-90).toString(); // \"#7f00ff\"\nnew TinyColor('#f00').spin(90).toString(); // \"#80ff00\"\n\n// spin(0) and spin(360) do nothing\nnew TinyColor('#f00').spin(0).toString(); // \"#ff0000\"\nnew TinyColor('#f00').spin(360).toString(); // \"#ff0000\"\n```\n\n### Color Combinations\n\nCombination functions return an array of TinyColor objects unless otherwise noted.\n\n### analogous\n\n`analogous: function(, results = 6, slices = 30) -> array<TinyColor>`.\n\n```ts\nconst colors = new TinyColor('#f00').analogous();\ncolors.map(t => t.toHexString()); // [ \"#ff0000\", \"#ff0066\", \"#ff0033\", \"#ff0000\", \"#ff3300\", \"#ff6600\" ]\n```\n\n### monochromatic\n\n`monochromatic: function(, results = 6) -> array<TinyColor>`.\n\n```ts\nconst colors = new TinyColor('#f00').monochromatic();\ncolors.map(t => t.toHexString()); // [ \"#ff0000\", \"#2a0000\", \"#550000\", \"#800000\", \"#aa0000\", \"#d40000\" ]\n```\n\n### splitcomplement\n\n`splitcomplement: function() -> array<TinyColor>`.\n\n```ts\nconst colors = new TinyColor('#f00').splitcomplement();\ncolors.map(t => t.toHexString()); // [ \"#ff0000\", \"#ccff00\", \"#0066ff\" ]\n```\n\n### triad\n\n`triad: function() -> array<TinyColor>`.\n\n```ts\nconst colors = new TinyColor('#f00').triad();\ncolors.map(t => t.toHexString()); // [ \"#ff0000\", \"#00ff00\", \"#0000ff\" ]\n```\n\n### tetrad\n\n```ts\nconst colors = new TinyColor('#f00').tetrad();\ncolors.map(t => t.toHexString()); // [ \"#ff0000\", \"#80ff00\", \"#00ffff\", \"#7f00ff\" ]\n```\n\n### polyad\n\n```ts\nconst colors = new TinyColor('#f00').polyad(3);\ncolors.map(t => t.toHexString()); // [ \"#ff0000\", \"#80ff00\", \"#00ffff\", \"#7f00ff\" ]\n```\n\n### complement\n\n`complement: function() -> TinyColor`.\n\n```ts\nnew TinyColor('#f00').complement().toHexString(); // \"#00ffff\"\n```\n\n## Color Utilities\n\n### equals\n\n```ts\nimport { equals } from '@ctrl/tinycolor';\nequals(color1, color2);\n```\n\n### random\n\nReturns a random TinyColor object. This is an implementation of [randomColor](https://github.com/davidmerfield/randomColor/) by David Merfield.\nThe difference input parsing and output formatting are handled by TinyColor.\n\nYou can pass an options object to influence the type of color it produces. The options object accepts the following properties:\n\n`hue` – Controls the hue of the generated color. You can pass a string representing a color name: `red`, `orange`, `yellow`, `green`, `blue`, `purple`, `pink` and `monochrome` are currently supported. If you pass a hexidecimal color string such as #00FFFF, its hue value will be extracted and use that to generate colors.\n`luminosity` – Controls the luminosity of the generated color. You can specify a string containing bright, light or dark.\n`count` – An integer which specifies the number of colors to generate.\n`seed` - An integer or string which when passed will cause randomColor to return the same color each time.\n`alpha` – A decimal between 0 and 1. Only relevant when using a format with an alpha channel (rgba and hsla). Defaults to a random value.\n\n```ts\nimport { random } from '@ctrl/tinycolor';\n// Returns a TinyColor for an attractive color\nrandom();\n\n// Returns an array of ten green colors\nrandom({\n  count: 10,\n  hue: 'green',\n});\n\n// Returns a TinyColor object in a light blue\nrandom({\n  luminosity: 'light',\n  hue: 'blue',\n});\n\n// Returns a TinyColor object in a 'truly random' color\nrandom({\n  luminosity: 'random',\n  hue: 'random',\n});\n\n// Returns a dark RGB color with specified alpha\nrandom({\n  luminosity: 'dark',\n  alpha: 0.5,\n});\n```\n\n### Readability\n\nTinyColor assesses readability based on the [Web Content Accessibility Guidelines (Version 2.0)](http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef).\n\n#### readability\n\n`readability: function(TinyColor, TinyColor) -> Object`.\nReturns the contrast ratio between two colors.\n\n```ts\nimport { readability } from '@ctrl/tinycolor';\nreadability('#000', '#000'); // 1\nreadability('#000', '#111'); // 1.1121078324840545\nreadability('#000', '#fff'); // 21\n```\n\nUse the values in your own calculations, or use one of the convenience functions below.\n\n#### isReadable\n\n`isReadable: function(TinyColor, TinyColor, Object) -> Boolean`. Ensure that foreground and background color combinations meet WCAG guidelines. `Object` is optional, defaulting to `{level: \"AA\",size: \"small\"}`. `level` can be `\"AA\"` or \"AAA\" and `size` can be `\"small\"` or `\"large\"`.\n\nHere are links to read more about the [AA](http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) and [AAA](http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html) requirements.\n\n```ts\nimport { isReadable } from '@ctrl/tinycolor';\nisReadable(\"#000\", \"#111\"); // false\nisReadable(\"#ff0088\", \"#5c1a72\", { level: \"AA\", size: \"small\" }); // false\nisReadable(\"#ff0088\", \"#5c1a72\", { level: \"AA\", size: \"large\" }), // true\n```\n\n#### mostReadable\n\n`mostReadable: function(TinyColor, [TinyColor, TinyColor ...], Object) -> Boolean`.\nGiven a base color and a list of possible foreground or background colors for that base, returns the most readable color.\nIf none of the colors in the list is readable, `mostReadable` will return the better of black or white if `includeFallbackColors:true`.\n\n```ts\nimport { mostReadable } from '@ctrl/tinycolor';\nmostReadable('#000', ['#f00', '#0f0', '#00f']).toHexString(); // \"#00ff00\"\nmostReadable('#123', ['#124', '#125'], { includeFallbackColors: false }).toHexString(); // \"#112255\"\nmostReadable('#123', ['#124', '#125'], { includeFallbackColors: true }).toHexString(); // \"#ffffff\"\nmostReadable('#ff0088', ['#2e0c3a'], {\n  includeFallbackColors: true,\n  level: 'AAA',\n  size: 'large',\n}).toHexString(); // \"#2e0c3a\",\nmostReadable('#ff0088', ['#2e0c3a'], {\n  includeFallbackColors: true,\n  level: 'AAA',\n  size: 'small',\n}).toHexString(); // \"#000000\",\n```\n\nSee [index.html](https://github.com/bgrins/TinyColor/blob/master/index.html) in the project for a demo.\n\n## Common operations\n\n### clone\n\n`clone: function() -> TinyColor`.\nInstantiate a new TinyColor object with the same color. Any changes to the new one won't affect the old one.\n\n```ts\nconst color1 = new TinyColor('#F00');\nconst color2 = color1.clone();\ncolor2.setAlpha(0.5);\n\ncolor1.toString(); // \"#ff0000\"\ncolor2.toString(); // \"rgba(255, 0, 0, 0.5)\"\n```"
}