{
	"name": "html-encoding-sniffer",
	"versions": {
		"1.0.0": {
			"name": "html-encoding-sniffer",
			"description": "Sniff the encoding from a HTML byte stream",
			"version": "1.0.0",
			"author": {
				"name": "Domenic Denicola",
				"email": "d@domenic.me",
				"url": "https://domenic.me/"
			},
			"homepage": "https://github.com/jsdom/html-encoding-sniffer#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jsdom/html-encoding-sniffer.git"
			},
			"bugs": {
				"url": "https://github.com/jsdom/html-encoding-sniffer/issues"
			},
			"main": "lib/html-encoding-sniffer.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/html-encoding-sniffer/-/html-encoding-sniffer-1.0.0.tgz",
				"shasum": "19f93ff0d070bd3c238f1ff16ea2f68cc0d42c96"
			},
			"dependencies": {
				"whatwg-encoding": "^1.0.1"
			},
			"devDependencies": {
				"eslint": "^3.8.0",
				"mocha": "^3.1.2"
			},
			"keywords": [
				"encoding",
				"html"
			],
			"license": "WTFPL",
			"files": [
				"lib/"
			],
			"maintainers": [
				{
					"name": "domenic",
					"email": "d@domenic.me"
				}
			],
			"directories": {},
			"scripts": {
				"test": "mocha",
				"lint": "eslint lib test"
			},
			"_from": ".",
			"_npmVersion": "3.9.5",
			"_npmUser": {
				"name": "domenic",
				"email": "d@domenic.me"
			},
			"_id": "html-encoding-sniffer@1.0.0",
			"gitHead": "8cd325d2e567e33dec4f0fa489c556e0e290db5d",
			"_npmOperationalInternal": {
				"host": "packages-16-east.internal.npmjs.com",
				"tmp": "tmp/html-encoding-sniffer-1.0.0.tgz_1476589995029_0.5327760553918779"
			},
			"_shasum": "19f93ff0d070bd3c238f1ff16ea2f68cc0d42c96",
			"_nodeVersion": "6.2.2"
		},
		"1.0.1": {
			"name": "html-encoding-sniffer",
			"description": "Sniff the encoding from a HTML byte stream",
			"version": "1.0.1",
			"author": {
				"name": "Domenic Denicola",
				"email": "d@domenic.me",
				"url": "https://domenic.me/"
			},
			"homepage": "https://github.com/jsdom/html-encoding-sniffer#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jsdom/html-encoding-sniffer.git"
			},
			"bugs": {
				"url": "https://github.com/jsdom/html-encoding-sniffer/issues"
			},
			"main": "lib/html-encoding-sniffer.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/html-encoding-sniffer/-/html-encoding-sniffer-1.0.1.tgz",
				"shasum": "79bf7a785ea495fe66165e734153f363ff5437da"
			},
			"dependencies": {
				"whatwg-encoding": "^1.0.1"
			},
			"devDependencies": {
				"eslint": "^3.8.0",
				"mocha": "^3.1.2"
			},
			"keywords": [
				"encoding",
				"html"
			],
			"license": "WTFPL",
			"files": [
				"lib/"
			],
			"maintainers": [
				{
					"name": "domenic",
					"email": "d@domenic.me"
				}
			],
			"directories": {},
			"scripts": {
				"test": "mocha",
				"lint": "eslint lib test"
			},
			"_from": ".",
			"_npmVersion": "3.9.5",
			"_npmUser": {
				"name": "domenic",
				"email": "d@domenic.me"
			},
			"_id": "html-encoding-sniffer@1.0.1",
			"gitHead": "9b4a785caf193f8852770b7dfc7194431fbf8bed",
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/html-encoding-sniffer-1.0.1.tgz_1476591787938_0.5426098443567753"
			},
			"_shasum": "79bf7a785ea495fe66165e734153f363ff5437da",
			"_nodeVersion": "6.2.2"
		},
		"1.0.2": {
			"name": "html-encoding-sniffer",
			"description": "Sniff the encoding from a HTML byte stream",
			"version": "1.0.2",
			"author": {
				"name": "Domenic Denicola",
				"email": "d@domenic.me",
				"url": "https://domenic.me/"
			},
			"homepage": "https://github.com/jsdom/html-encoding-sniffer#readme",
			"repository": {
				"type": "git",
				"url": "git+https://github.com/jsdom/html-encoding-sniffer.git"
			},
			"bugs": {
				"url": "https://github.com/jsdom/html-encoding-sniffer/issues"
			},
			"main": "lib/html-encoding-sniffer.js",
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",
				"shasum": "e70d84b94da53aa375e11fe3a351be6642ca46f8"
			},
			"dependencies": {
				"whatwg-encoding": "^1.0.1"
			},
			"devDependencies": {
				"eslint": "^3.8.0",
				"mocha": "^3.1.2"
			},
			"keywords": [
				"encoding",
				"html"
			],
			"license": "MIT",
			"files": [
				"lib/"
			],
			"maintainers": [
				{
					"name": "domenic",
					"email": "d@domenic.me"
				}
			],
			"directories": {},
			"scripts": {
				"test": "mocha",
				"lint": "eslint lib test"
			},
			"_npmVersion": "5.4.2",
			"_npmUser": {
				"name": "domenic",
				"email": "d@domenic.me"
			},
			"_id": "html-encoding-sniffer@1.0.2",
			"gitHead": "8d69308c38af4b19170d2caeac6e16c6f52f5e01",
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/html-encoding-sniffer-1.0.2.tgz_1508717756193_0.17921806732192636"
			},
			"_nodeVersion": "8.6.0"
		}
	},
	"time": {
		"created": "2016-10-16T03:53:16.596Z",
		"modified": "2018-07-03T20:58:58.294Z",
		"1.0.0": "2016-10-16T03:53:16.596Z",
		"1.0.1": "2016-10-16T04:23:09.751Z",
		"1.0.2": "2017-10-23T00:15:57.146Z"
	},
	"dist-tags": {
		"latest": "1.0.2"
	},
	"_uplinks": {
		"npmjs": {
			"fetched": 1547828470144
		}
	},
	"_distfiles": {
		"html-encoding-sniffer-1.0.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/html-encoding-sniffer/-/html-encoding-sniffer-1.0.0.tgz",
			"sha": "19f93ff0d070bd3c238f1ff16ea2f68cc0d42c96"
		},
		"html-encoding-sniffer-1.0.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/html-encoding-sniffer/-/html-encoding-sniffer-1.0.1.tgz",
			"sha": "79bf7a785ea495fe66165e734153f363ff5437da"
		},
		"html-encoding-sniffer-1.0.2.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",
			"sha": "e70d84b94da53aa375e11fe3a351be6642ca46f8"
		}
	},
	"_attachments": {},
	"_rev": "10-bb42f29e9989e997",
	"readme": "# Determine the Encoding of a HTML Byte Stream\n\nThis package implements the HTML Standard's [encoding sniffing algorithm](https://html.spec.whatwg.org/multipage/syntax.html#encoding-sniffing-algorithm) in all its glory. The most interesting part of this is how it pre-scans the first 1024 bytes in order to search for certain `<meta charset>`-related patterns.\n\n```js\nconst htmlEncodingSniffer = require(\"html-encoding-sniffer\");\nconst fs = require(\"fs\");\n\nconst htmlBuffer = fs.readFileSync(\"./html-page.html\");\nconst sniffedEncoding = htmlEncodingSniffer(htmlBuffer);\n```\n\nThe returned value will be a canonical [encoding name](https://encoding.spec.whatwg.org/#names-and-labels) (not a label). You might then combine this with the [whatwg-encoding](https://github.com/jsdom/whatwg-encoding) package to decode the result:\n\n```js\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst htmlString = whatwgEncoding.decode(htmlBuffer, sniffedEncoding);\n```\n\n## Options\n\nYou can pass two potential options to `htmlEncodingSniffer`:\n\n```js\nconst sniffedEncoding = htmlEncodingSniffer(htmlBuffer, {\n  transportLayerEncodingLabel,\n  defaultEncoding\n});\n```\n\nThese represent two possible inputs into the [encoding sniffing algorithm](https://html.spec.whatwg.org/multipage/syntax.html#encoding-sniffing-algorithm):\n\n- `transportLayerEncodingLabel` is an encoding label that is obtained from the \"transport layer\" (probably a HTTP `Content-Type` header), which overrides everything but a BOM.\n- `defaultEncoding` is the ultimate fallback encoding used if no valid encoding is supplied by the transport layer, and no encoding is sniffed from the bytes. It defaults to `\"windows-1252\"`, as recommended by the algorithm's table of suggested defaults for \"All other locales\" (including the `en` locale).\n\n## Credits\n\nThis package was originally based on the excellent work of [@nicolashenry](https://github.com/nicolashenry), [in jsdom](https://github.com/tmpvar/jsdom/blob/16fd85618f2705d181232f6552125872a37164bc/lib/jsdom/living/helpers/encoding.js). It has since been pulled out into this separate package."
}