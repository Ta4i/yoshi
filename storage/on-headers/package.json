{
	"name": "on-headers",
	"versions": {
		"1.0.0": {
			"name": "on-headers",
			"description": "Execute a listener when a response is about to write headers",
			"version": "1.0.0",
			"author": {
				"name": "Douglas Christopher Wilson",
				"email": "doug@somethingdoug.com"
			},
			"homepage": "https://github.com/jshttp/on-headers",
			"repository": {
				"type": "git",
				"url": "https://github.com/jshttp/on-headers"
			},
			"bugs": {
				"url": "https://github.com/jshttp/on-headers/issues"
			},
			"engines": {
				"node": ">= 0.8.0"
			},
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/on-headers/-/on-headers-1.0.0.tgz",
				"shasum": "2c75b5da4375513d0161c6052e7fcbe4953fca5d"
			},
			"dependencies": {},
			"devDependencies": {
				"istanbul": "0.3.0",
				"mocha": "~1.21.4",
				"supertest": "~0.13.0"
			},
			"keywords": [
				"event",
				"headers",
				"http",
				"onheaders"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "dougwilson",
					"email": "doug@somethingdoug.com"
				}
			],
			"directories": {},
			"scripts": {
				"test": "mocha --reporter spec --bail --check-leaks test/",
				"test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
				"test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
			},
			"_from": ".",
			"_npmVersion": "1.4.21",
			"_npmUser": {
				"name": "dougwilson",
				"email": "doug@somethingdoug.com"
			},
			"_id": "on-headers@1.0.0",
			"gitHead": "434950a0748cd38bf9a04f3fd4f3ff89cf565fda",
			"_shasum": "2c75b5da4375513d0161c6052e7fcbe4953fca5d"
		},
		"0.0.0": {
			"name": "on-headers",
			"description": "Execute a listener when a response is about to write headers",
			"version": "0.0.0",
			"author": {
				"name": "Douglas Christopher Wilson",
				"email": "doug@somethingdoug.com"
			},
			"homepage": "https://github.com/expressjs/on-headers",
			"repository": {
				"type": "git",
				"url": "https://github.com/expressjs/on-headers.git"
			},
			"bugs": {
				"url": "https://github.com/expressjs/on-headers/issues"
			},
			"engines": {
				"node": ">= 0.8.0"
			},
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/on-headers/-/on-headers-0.0.0.tgz",
				"shasum": "ee2817f8344325785cd9c2df2b242bbc17caf4c4"
			},
			"dependencies": {},
			"devDependencies": {
				"mocha": "~1.18.2",
				"supertest": "~0.12.1"
			},
			"keywords": [
				"event",
				"headers",
				"http",
				"onheaders"
			],
			"license": "MIT",
			"maintainers": [
				{
					"name": "dougwilson",
					"email": "doug@somethingdoug.com"
				}
			],
			"directories": {},
			"scripts": {
				"test": "mocha --reporter spec test/"
			},
			"_from": ".",
			"_npmVersion": "1.4.3",
			"_npmUser": {
				"name": "dougwilson",
				"email": "doug@somethingdoug.com"
			},
			"_id": "on-headers@0.0.0"
		},
		"1.0.1": {
			"name": "on-headers",
			"description": "Execute a listener when a response is about to write headers",
			"version": "1.0.1",
			"author": {
				"name": "Douglas Christopher Wilson",
				"email": "doug@somethingdoug.com"
			},
			"homepage": "https://github.com/jshttp/on-headers",
			"repository": {
				"type": "git",
				"url": "https://github.com/jshttp/on-headers"
			},
			"bugs": {
				"url": "https://github.com/jshttp/on-headers/issues"
			},
			"engines": {
				"node": ">= 0.8"
			},
			"dist": {
				"tarball": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/on-headers/-/on-headers-1.0.1.tgz",
				"shasum": "928f5d0f470d49342651ea6794b0857c100693f7"
			},
			"dependencies": {},
			"devDependencies": {
				"istanbul": "0.3.21",
				"mocha": "2.3.3",
				"supertest": "1.1.0"
			},
			"keywords": [
				"event",
				"headers",
				"http",
				"onheaders"
			],
			"license": "MIT",
			"files": [
				"LICENSE",
				"HISTORY.md",
				"README.md",
				"index.js"
			],
			"maintainers": [
				{
					"name": "dougwilson",
					"email": "doug@somethingdoug.com"
				},
				{
					"name": "jongleberry",
					"email": "jonathanrichardong@gmail.com"
				}
			],
			"directories": {},
			"scripts": {
				"test": "mocha --reporter spec --bail --check-leaks test/",
				"test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
				"test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
			},
			"_from": ".",
			"_npmVersion": "1.4.28",
			"_npmUser": {
				"name": "dougwilson",
				"email": "doug@somethingdoug.com"
			},
			"_id": "on-headers@1.0.1",
			"gitHead": "ab0156a979d72353cfe666cccb3639e016b00280",
			"_shasum": "928f5d0f470d49342651ea6794b0857c100693f7"
		}
	},
	"time": {
		"created": "2014-05-14T01:43:08.147Z",
		"modified": "2017-08-31T04:33:43.088Z",
		"1.0.0": "2014-08-10T23:14:54.117Z",
		"0.0.0": "2014-05-14T01:43:08.147Z",
		"1.0.1": "2015-09-30T03:47:06.558Z"
	},
	"dist-tags": {
		"latest": "1.0.1"
	},
	"_uplinks": {
		"npmjs": {
			"fetched": 1547828434624
		}
	},
	"_distfiles": {
		"on-headers-1.0.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/on-headers/-/on-headers-1.0.0.tgz",
			"sha": "2c75b5da4375513d0161c6052e7fcbe4953fca5d"
		},
		"on-headers-0.0.0.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/on-headers/-/on-headers-0.0.0.tgz",
			"sha": "ee2817f8344325785cd9c2df2b242bbc17caf4c4"
		},
		"on-headers-1.0.1.tgz": {
			"url": "https://repo.dev.wixpress.com/artifactory/api/npm/npm-repos/on-headers/-/on-headers-1.0.1.tgz",
			"sha": "928f5d0f470d49342651ea6794b0857c100693f7"
		}
	},
	"_attachments": {},
	"_rev": "10-6c52f4f2b2f78bf4",
	"readme": "# on-headers\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nExecute a listener when a response is about to write headers.\n\n## Installation\n\n```sh\n$ npm install on-headers\n```\n\n## API\n\n```js\nvar onHeaders = require('on-headers')\n```\n\n### onHeaders(res, listener)\n\nThis will add the listener `listener` to fire when headers are emitted for `res`.\nThe listener is passed the `response` object as it's context (`this`). Headers are\nconsidered to be emitted only once, right before they are sent to the client.\n\nWhen this is called multiple times on the same `res`, the `listener`s are fired\nin the reverse order they were added.\n\n## Examples\n\n```js\nvar http = require('http')\nvar onHeaders = require('on-headers')\n\nhttp\n.createServer(onRequest)\n.listen(3000)\n\nfunction addPoweredBy() {\n  // set if not set by end of request\n  if (!this.getHeader('X-Powered-By')) {\n    this.setHeader('X-Powered-By', 'Node.js')\n  }\n}\n\nfunction onRequest(req, res) {\n  onHeaders(res, addPoweredBy)\n\n  res.setHeader('Content-Type', 'text/plain')\n  res.end('hello!')\n}\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/on-headers.svg\n[npm-url]: https://npmjs.org/package/on-headers\n[node-version-image]: https://img.shields.io/node/v/on-headers.svg\n[node-version-url]: http://nodejs.org/download/\n[travis-image]: https://img.shields.io/travis/jshttp/on-headers/master.svg\n[travis-url]: https://travis-ci.org/jshttp/on-headers\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/on-headers/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/on-headers?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/on-headers.svg\n[downloads-url]: https://npmjs.org/package/on-headers"
}